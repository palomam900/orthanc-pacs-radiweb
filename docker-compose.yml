version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: orthanc-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: orthanc
      POSTGRES_USER: orthanc
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-orthanc_secure_password}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks:
      - orthanc-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U orthanc"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Orthanc PACS Server
  orthanc:
    image: orthancteam/orthanc:24.5.0
    container_name: orthanc-server
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # Stone Web Viewer
      STONE_WEB_VIEWER_PLUGIN_ENABLED: "true"
      DICOM_WEB_PLUGIN_ENABLED: "true"
      
      # Database
      POSTGRESQL_PLUGIN_ENABLED: "true"
      POSTGRESQL_HOST: postgres
      POSTGRESQL_PORT: 5432
      POSTGRESQL_DATABASE: orthanc
      POSTGRESQL_USERNAME: orthanc
      POSTGRESQL_PASSWORD: ${POSTGRES_PASSWORD:-orthanc_secure_password}
      
      # Basic Configuration
      ORTHANC_NAME: "RADIWEB_PACS"
      DICOM_AET: "RADIWEB_PACS"
      DICOM_PORT: 4242
      HTTP_PORT: 8042
      
      # Security
      REMOTE_ACCESS_ALLOWED: "true"
      AUTHENTICATION_ENABLED: "true"
      REGISTERED_USERS: |
        {
          "admin": "${ADMIN_PASSWORD:-admin}",
          "viewer": "${VIEWER_PASSWORD:-viewer123}"
        }
      
      # Advanced Security
      WEBDAV_ENABLED: "false"
      EXECUTE_LUA_ENABLED: "false"
      REST_API_WRITE_TO_FILE_SYSTEM_ENABLED: "false"
      ORTHANC_EXPLORER_ENABLED: "true"
      
      # CORS Configuration
      HTTP_HEADERS: |
        {
          "Access-Control-Allow-Origin": "*",
          "Access-Control-Allow-Methods": "GET, POST, PUT, DELETE, OPTIONS",
          "Access-Control-Allow-Headers": "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
        }
    
    volumes:
      - ./config/orthanc.json:/etc/orthanc/orthanc.json:ro
      - ./data/orthanc:/var/lib/orthanc/db
    
    ports:
      - "4242:4242"  # DICOM port
      - "8042:8042"  # HTTP port (internal access)
    
    networks:
      - orthanc-network
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8042/system"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:1.25-alpine
    container_name: orthanc-nginx
    restart: unless-stopped
    depends_on:
      orthanc:
        condition: service_healthy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./certs:/etc/nginx/certs:ro
    networks:
      - orthanc-network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  orthanc-network:
    driver: bridge

volumes:
  postgres_data:
  orthanc_data:

